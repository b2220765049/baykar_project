# syntax=docker/dockerfile:1

# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Dockerfile reference guide at
# https://docs.docker.com/go/dockerfile-reference/

# Want to help us make this template better? Share your feedback here: https://forms.gle/ybq9Krt8jtBL3iCk7

################################################################################
# Pick a base image to serve as the foundation for the other build stages in
# this file.
#
# For illustrative purposes, the following FROM command
# is using the alpine image (see https://hub.docker.com/_/alpine).
# By specifying the "latest" tag, it will also use whatever happens to be the
# most recent version of that image when you build your Dockerfile.
# If reproducibility is important, consider using a versioned tag
# (e.g., alpine:3.17.2) or SHA (e.g., alpine@sha256:c41ab5c992deb4fe7e5da09f67a8804a46bd0592bfdf0b1847dde0e0889d2bff).
## Project Dockerfile for Medical RAG
## Uses python:3.11-slim and runs the FastAPI app via uvicorn

# Use a CUDA-enabled PyTorch image for GPU inference
FROM pytorch/pytorch:2.4.0-cuda12.1-cudnn9-runtime AS final

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

WORKDIR /app

# Install system dependencies needed for common Python packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    git \
    curl \
    ca-certificates \
    libgomp1 \
    ffmpeg \
  && rm -rf /var/lib/apt/lists/*

# Copy and install Python dependencies
COPY requirements.txt /app/requirements.txt
RUN python -m pip install --upgrade pip setuptools wheel \
 && pip install --no-cache-dir -r /app/requirements.txt

# Copy application source
COPY . /app


# Create a non-privileged user and give ownership of the app directory
ARG APP_USER=appuser
RUN groupadd -r ${APP_USER} || true && useradd -r -g ${APP_USER} ${APP_USER} || true \
 && mkdir -p /home/${APP_USER} /home/${APP_USER}/.cache/huggingface/hub \
 && chown -R ${APP_USER}:${APP_USER} /app /home/${APP_USER}

# Set cache envs so huggingface_hub uses a writable cache directory
ENV HF_HOME=/home/${APP_USER}/.cache
ENV HUGGINGFACE_HUB_CACHE=/home/${APP_USER}/.cache/huggingface

USER ${APP_USER}

EXPOSE 8000

# Start the FastAPI application using Uvicorn
CMD ["uvicorn", "app_server:app", "--host", "0.0.0.0", "--port", "8000"]
